# This file is being maintained by Puppet.
# DO NOT EDIT
#
# rancid 2.3.6 and 3.2
# This file sets up the environment used for rancid.  see rancid.conf(5)
#
# This will be site specific
#
TERM=network;export TERM
#
# Create files w/o world read/write/exec permissions, but read/exec permissions
# for group.
umask 027
#
# Under BASEDIR (i.e.: --localstatedir), there will be a "logs" directory for
# the logs from rancid and a directory for each group of routers defined in
# LIST_OF_GROUPS (below).  In addition to these, there will be a "CVS"
# directory which is the cvs (or Subversion) repository.
#
# Use a full path (no sym-links) for BASEDIR.
#
TMPDIR=/tmp; export TMPDIR
# Be careful changing this, it affects CVSROOT below.
BASEDIR=<%= @homedir_real %>; export BASEDIR
PATH=<%= @rancid_path_env_real %>; export PATH
# Location of the CVS/SVN/GIT repository.  Be careful changing this.
# If RCSSYS is svn or git, this can be:
# - an (absolute) path (a subdirectory of BASEDIR by default).  BASEDIR/CVS,
#   BASEDIR/.svn, or BASEDIR/.git, but it does not matter.
# - any URL that git/subversion understand, but beware that:
#   - no attempt will be made to create the repository when running rancid-cvs.
#   - authentication credentials, if necessary, MUST be cached (see the SVN
#     book, Ch. 3, Network Model, Caching credentials) before non-interactive
#     commands can run, e.g. by running rancid-cvs after installation.
# CVSROOT=$BASEDIR/CVS; export CVSROOT
CVSROOT="<%= @cvsroot %>"; export CVSROOT
# Location of log files produced by rancid-run(1).
LOGDIR=<%= @logdir_real %>; export LOGDIR
#
# Select which RCS system to use, "cvs" (default), "svn" or "git".  Do not
# change this after CVSROOT has been created with rancid-cvs.  Changing between
# these requires manual conversions.
<%- if @rcs -%>
RCSSYS=<%= @rcs %>; export RCSSYS
<%- end -%>
#
# if ACLSORT is NO, access-lists will NOT be sorted.
#ACLSORT=YES; export ACLSORT
#
# if NOPIPE is set, temp files will be used instead of a cmd pipe during
# collection from the router(s).
<%- if @nopipe -%>
NOPIPE=<%= @nopipe %>; export NOPIPE
<%- end -%>
#NOPIPE=YES; export NOPIPE
#
# FILTER_PWDS determines which passwords are filtered from configs by the
# value set (NO | YES | ALL).  see rancid.conf(5).
FILTER_PWDS="<%= @filterpwds %>"; export FILTER_PWDS
#
# if NOCOMMSTR is set, snmp community strings will be stripped from the configs
NOCOMMSTR="<%= @nocommstr %>"; export NOCOMMSTR
#
# How many times failed collections are retried (for each run) before
# giving up.  Minimum: 1
MAX_ROUNDS="<%= @maxrounds %>"; export MAX_ROUNDS
#
# How many hours should pass before complaining about routers that
# can not be reached.  The value should be greater than the number
# of hours between your rancid-run cron job.  Default: 24
OLDTIME="<%= @oldtime %>"; export OLDTIME
#
# How many hours should pass before complaining that a group's collection
# (the age of it's lock file) is hung.
LOCKTIME="<%= @locktime %>"; export LOCKTIME
#
# The number of devices to collect simultaneously.
PAR_COUNT="<%= @parcount %>"; export PAR_COUNT
#
# list of rancid groups
LIST_OF_GROUPS="<%= @groups.flatten.join(' ') %>"; export LIST_OF_GROUPS
#
# For each group, define a list of people to receive the diffs.
# in sendmail's /etc/aliases.
#   rancid-group:	joe,moe@foo
#   rancid-admin-group:	hostmaster
# be sure to read ../README regarding aliases.
#
# If your MTA configuration is broken or you want mail to be forwarded to a
# domain not the same as the local one, define that domain here.  "@" must be
# included, as this is simply appended to the usual recipients.  It is NOT
# appended to recipients specified in rancid-run's -m option.
<%- if @maildomain -%>
MAILDOMAIN="<%= @maildomain %>"; export MAILDOMAIN
<%- end -%>
#
# By default, rancid mail is marked with precedence "bulk".  This may be
# changed by setting the MAILHEADERS variable; for example no header by setting
# it to "" or adding X- style headers.  Individual headers must be separated
# by a \n.
#MAILHEADERS="Precedence: bulk"; export MAILHEADERS
